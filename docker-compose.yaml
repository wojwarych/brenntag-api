volumes:
  brenntag_volume:
    name: brenntag_volume

networks:
  brenntag_network:
    name: brenntag_network

services:
  brenntag_api:
    container_name: api
    build:
      dockerfile: ./Dockerfile
    volumes:
      - ./src:/app/src
      - ./pyproject.toml:/app/pyproject.toml
      - ./poetry.lock:/app/poetry.lock
    ports:
      - "8080:8080"
    environment:
      POSTGRES_DB: "application_database"
      POSTGRES_PASSWORD: "root"
      POSTGRES_USER: "brenntag_admin"
      POSTGRES_PORT: 5433
      POSTGRES_HOST: "brenntag_db"
    restart: always
    depends_on:
      brenntag_db:
        condition: service_healthy
    networks:
      - brenntag_network

  brenntag_db:
    image: postgres:17
    container_name: db
    restart: always
    volumes:
      - brenntag_volume:/var/lib/postgresql/data
    environment:
      PGDATA: /var/lib/postgresql/data
      POSTGRES_DB: "application_database"
      POSTGRES_PASSWORD: "root"
      POSTGRES_USER: "brenntag_admin"
      PGPORT: 5433
    ports:
      - "5433:5433"
    healthcheck:
      test:
        ["CMD", "pg_isready", "-q", "-d", "application_database", "-U", "brenntag_admin"]
      timeout: 45s
      interval: 1s
      retries: 45
    networks:
      - brenntag_network
